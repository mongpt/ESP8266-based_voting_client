#include "display.h"

const unsigned char wifilogo[] PROGMEM = {
// 'imresizer-1702234655501', 35x35px
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0x00, 0x01, 0xff, 0xff, 
0xf0, 0x00, 0x07, 0xf0, 0x01, 0xfc, 0x00, 0x0f, 0x80, 0x00, 0x3e, 0x00, 0x1f, 0x00, 0x00, 0x1f, 
0x00, 0x1c, 0x0f, 0xfe, 0x07, 0x00, 0x08, 0x3f, 0xff, 0x82, 0x00, 0x00, 0x7f, 0x9f, 0xc0, 0x00, 
0x01, 0xf8, 0x01, 0xf0, 0x00, 0x01, 0xe0, 0x00, 0xf0, 0x00, 0x01, 0x80, 0x00, 0x30, 0x00, 0x00, 
0x07, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x1c, 
0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 
0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char batterylogo[] PROGMEM = {
// 'imresizer-1702234758351', 35x35px
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 
0xfc, 0x00, 0x38, 0x00, 0x00, 0x1e, 0x00, 0x78, 0x00, 0x00, 0x0e, 0x00, 0x70, 0x00, 0x00, 0x0e, 
0x00, 0x70, 0x00, 0x00, 0x0f, 0x80, 0x70, 0x00, 0x00, 0x0f, 0x80, 0x70, 0x00, 0x00, 0x0f, 0xc0, 
0x70, 0x00, 0x00, 0x0f, 0xc0, 0x70, 0x00, 0x00, 0x0f, 0xc0, 0x70, 0x00, 0x00, 0x0f, 0xc0, 0x70, 
0x00, 0x00, 0x0f, 0xc0, 0x70, 0x00, 0x00, 0x0f, 0x80, 0x70, 0x00, 0x00, 0x0f, 0x80, 0x70, 0x00, 
0x00, 0x0e, 0x00, 0x70, 0x00, 0x00, 0x0e, 0x00, 0x38, 0x00, 0x00, 0x1e, 0x00, 0x3f, 0xff, 0xff, 
0xfc, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

Epd epd;
unsigned char image[1024];
Paint paint(image, 0, 0);

void initDisplay(){
   //E-paper init
  epd.LDirInit();
  epd.Clear(); // clears whole screen to white
  paint.SetRotate(ROTATE_270); //rotate screen 
}

void paintVoteScreen() {
  //wifilogo
    paint.SetWidth(35);
    paint.SetHeight(35);
    paint.Clear(UNCOLORED); // paints the height and width with the given color
    drawImage(0, 0, 35, 35, wifilogo); // draw the image at (0, 0) coordinates
    epd.SetFrameMemory(paint.GetImage(), 0, 0, paint.GetWidth(), paint.GetHeight());
  //battery logo
    paint.Clear(UNCOLORED);
    drawImage(0, 0, 35, 35, batterylogo); // draw the image at (0, 0) coordinates
    epd.SetFrameMemory(paint.GetImage(), 0, (200-35), paint.GetWidth(), paint.GetHeight());
  //battery status bar
    //paint.SetWidth(20);
    //paint.SetHeight(13);
    //paint.Clear(COLORED);
    //paint.DrawFilledRectangle(0, 0, 20, 14, COLORED);
    //epd.SetFrameMemory(paint.GetImage(), 16, (200-23), paint.GetWidth(), paint.GetHeight());
  //Bottom bar
    paint.SetWidth(22);
    paint.SetHeight(200);
    paint.Clear(COLORED); //paints the height and width the given colour
    paint.DrawStringAt(0, 0, "YES ABSTAIN NO", &Font20, UNCOLORED); //moves text to co-ordinates with-in the set height and width
    //paint.DrawStringAt(0, 2, "Yes   Abstain   No", &Font16, COLORED);
    //paint.DrawFilledRectangle(0, 0, 200, 3, UNCOLORED);
    //paint.DrawFilledRectangle(48, 0, 50, 25, UNCOLORED);
    //paint.DrawFilledRectangle(160, 0, 162, 25, UNCOLORED);
    epd.SetFrameMemory(paint.GetImage(), (200-22), 0, paint.GetWidth(), paint.GetHeight()); //moves page to co-ordinates
  //Name

  //Question
    char question[100] = "How many character that fit your";
    char question1[100] = "hello";
    char question2[100] = "Pneumonoultramicroscopicsilicovolcanoconiosis is a long question another another?";
    display_question(question);
    epd.DisplayFrame();
}

void drawImage(int x, int y, int width, int height, const unsigned char *image) {
    int byteWidth = (width + 7) / 8; // Number of bytes in a row
    for (int j = 0; j < height; j++) {
        for (int i = 0; i < width; i++) {
            if (pgm_read_byte(image + j * byteWidth + i / 8) & (128 >> (i % 8))) {
                paint.DrawPixel(x + i, y + j, COLORED);
            } else {
                paint.DrawPixel(x + i, y + j, UNCOLORED);
            }
        }
    }
}

void display_question(const char *question) {
    int charPos = 0;
    int linePos = 0;
    int numLines = strlen(question)%18 == 0 ? strlen(question)/18 : strlen(question)/18+1;
    char lineList[numLines][19];
    int i;
    int questionPos = ((200 - 36 - 26 - (16 * numLines)) / 2) + 36;
    for (i = 0; i<numLines-1; i++){
      strncpy(lineList[i], question + charPos, LINE_LEN);
      charPos += 18;
      lineList[i][charPos] = '\0';
      paint.DrawStringAt(2, linePos, lineList[i], &Font16, UNCOLORED);
      linePos += 16;
    }
    strcpy(lineList[i], question + charPos);
    paint.DrawStringAt(2, linePos, lineList[i], &Font16, UNCOLORED);
    epd.SetFrameMemory(paint.GetImage(), questionPos, 0, paint.GetWidth(), paint.GetHeight()); //moves page to co-ordinate
}

void displayWifi(){
  //wifilogo
    paint.SetWidth(35);
    paint.SetHeight(35);
    paint.Clear(UNCOLORED); // paints the height and width with the given color
    drawImage(0, 0, 35, 35, wifilogo); // draw the image at (0, 0) coordinates
    epd.SetFrameMemory(paint.GetImage(), 40, (200-35), paint.GetWidth(), paint.GetHeight());
}

